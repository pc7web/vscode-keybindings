// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+'",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+f11",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+k z",
        "command": "-workbench.action.toggleZenMode"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+b",
        "command": "code-runner.run"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-code-runner.run"
    },
    {
        "key": "ctrl+shift+'",
        "command": "workbench.files.action.showActiveFileInExplorer"
    },
    {
        "key": "ctrl+q",
        "command": "extension.querySQL"
    },
    {
        "key": "ctrl+q",
        "command": "-extension.querySQL"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.quickOpenTerm"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.terminal.focusNext"
    },
    {
        "key": "ctrl+shift+up",
        "command": "editor.emmet.action.incrementNumberByOne"
    },
    {
        "key": "ctrl+shift+down",
        "command": "editor.emmet.action.decrementNumberByOne"
    },
    {
        "key": "ctrl+alt+n",
        "command": "fileutils.newFile"
    },
    {
        "key": "ctrl+alt+n",
        "command": "explorer.newFile"
    },
    {
        "key": "ctrl+shift+pageup",
        "command": "-workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "ctrl+shift+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "ctrl+shift+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+d",
        "command": "cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+q",
        "command": "workbench.action.quit"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quit"
    },
    {
        "key": "alt+left",
        "command": "editor.emmet.action.prevEditPoint"
    },
    {
        "key": "ctrl+;",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+;",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "editor.action.transformToTitlecase"
    },
    {
        "key": "ctrl+alt+up",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+l",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+x",
        "command": "workbench.output.action.clearOutput"
    },
    {
        "key": "alt+x",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "shift+alt+c",
        "command": "workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+c",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+shift+f5",
        "command": "-workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.closeOtherEditors"
    },
    {
        "key": "alt+right",
        "command": "editor.emmet.action.nextEditPoint"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "-cursorWordEndRightSelect",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-cursorWordEndRight",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+y",
        "command": "workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "ctrl+shift+y",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "tab",
        "command": "editor.emmet.action.expandAbbreviation",
        "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
        "key": "tab",
        "command": "-editor.emmet.action.expandAbbreviation",
        "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "editor.emmet.action.balanceOut"
    },
    {
        "key": "ctrl+alt+a",
        "command": "editor.emmet.action.wrapWithAbbreviation"
    },
    {
        "key": "ctrl+alt+b",
        "command": "workbench.action.terminal.clear"
    },
    {
        "key": "ctrl+b",
        "command": "python.execInTerminal"
    }
]